class Ghosts {
  field Array ghosts;
  field int nGhosts;
  field Walls walls;

  constructor Ghosts new(Walls w) {
    let nGhosts = 1;
    let walls = w;
    let ghosts = Array.new(nGhosts);
    do createGhosts();
    return this;
  }

  method void createGhosts() {
    var int i;
    let i = 0;
    while (i < nGhosts) {
      let ghosts[i] = Ghost.new(walls);
      let i = i + 1;
    }
    return;
  }

  method void init() {
    var int i;
    var Ghost cur;
    let i = 0;
    while (i < nGhosts) {
      let cur = ghosts[i];
      do cur.init();
      let i = i + 1;
    }
    return;
  }

  method void next() {
    var int i;
    var Ghost cur;
    let i = 0;
    while (i < nGhosts) {
      let cur = ghosts[i];
      do cur.next();
      let i = i + 1;
    }
    return;
  }

  /** Disposes this Ghosts. */
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }
}