class PacMan {
  field int x, y, size;
  /** ( 1="up" | 2="down" | 3="left" | 4="right" ) */
  field int dir;
  field Walls walls;
  field int speed;

  constructor PacMan new(Walls w) {
    let x = 248;
    let y = 120;
    let size = 15;
    let dir = 3;
    let walls = w;
    let speed = 4;
    return this;
  }

  method void next() {
    do clear();
    do advance();
    do draw();
    return;
  }

  method void draw() {
    // Don't redraw entire pbject
    do Screen.setColor(true);
    do Screen.drawRectangle(x, y, x+size, y+size);
    return;
  }

  method void clear() {
    do Screen.setColor(false);
    do Screen.drawRectangle(x, y, x+size, y+size);
    return;
  }

  method boolean isOnDot(Dot dot) {
    var boolean isX;
    var boolean isY;
    let isX = false;
    let isY = false;
    if (((x-1) < dot.getX()) & (dot.getX() < (x+size+1))) {
      let isX = true;
    }
    if (((y-1) < dot.getY()) & (dot.getY() < (y+size+1))) {
      let isY = true;
    }
    return isX & isY;
  }

  method void advance() {
    var int nextX, nextY;
    let nextX = getNextX();
    let nextY = getNextY();
    if (willCollideWithWalls(nextX, nextY)) {
      return;
    }
    let x = nextX;
    let y = nextY;
    return;
  }

  method boolean willCollideWithWalls(int nextX, int nextY) {
    return walls.isOverlap(nextX, nextY, nextX+size, nextY+size);
  }

  method int getNextX() {
    var int nextX;
    let nextX = x;
    if (dir = 4) {
      let nextX = x + speed;
    }
    if (dir = 3) {
      let nextX = x - speed;
    }
    return nextX;
  }

  method int getNextY() {
    var int nextY;
    let nextY = y;
    if (dir = 2) {
      let nextY = y + speed;
    }
    if (dir = 1) {
      let nextY = y - speed;
    }
    return nextY;
  }

  method void reset() {
    do clear();
    let x = 248;
    let y = 120;
    let dir = 4;
    return;
  }

  method void setDir(int newDir) {
    let dir = newDir; // assume valid dir
    return;
  }

  /** Disposes this PacMan. */
  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }
}